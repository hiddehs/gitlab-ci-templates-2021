# This is a pre-release of a Helm 2to3 migration template to facilitate
# the migration of Auto DevOps releases to Helm 3.
#
# Usage
#
# include:
#   - project: hfyngvason/ci-templates
#     file: Helm-2to3.gitlab-ci.yml
#
# variables:
#   MIGRATE_HELM_2TO3: "true"
#   AUTO_DEVOPS_FORCE_DEPLOY_V2: 1

.helm-2to3-migrate:
  image: registry.gitlab.com/gitlab-org/cluster-integration/helm-install-image/releases/helm-2to3-2.16.9-3.2.4-kube-1.13.12
  # TODO: Do we need a new stage? This stage is not used any Auto DevOps template, but the name is misleading
  stage: deploy
  needs: []
  environment:
    action: prepare
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - helm-2-release-backups/
    public: false
  before_script:
    - apk add jq
    - export TILLER_NAMESPACE=$KUBE_NAMESPACE
    - export HELM_HOST="localhost:44134"
    - nohup tiller -listen "${HELM_HOST}" >tiller.log 2>&1 &
    - helm2 init --client-only
  script:
    # check for releases before backing up (to avoid creating an incomplete backup)
    - releases=$(helm2 ls --output json | jq -r '.Releases[].Name')
    - if [ -z "$releases" ]; then echo "No releases"; exit 1; fi
    # back up entire namespace
    - mkdir helm-2-release-backups
    - kubectl get configmap -n "$KUBE_NAMESPACE" -l "OWNER=TILLER" -o yaml > "helm-2-release-backups/$KUBE_NAMESPACE.yaml"
    # migrate each release
    - |
      for release in $releases; do
        echo "Migrating release: $release"
        helm3 2to3 convert --release-storage configmaps --tiller-out-cluster --tiller-ns "$TILLER_NAMESPACE" "$release"
      done

.helm-2to3-cleanup:
  image: registry.gitlab.com/gitlab-org/cluster-integration/helm-install-image/releases/helm-2to3-2.16.9-3.2.4-kube-1.13.12
  stage: cleanup
  environment:
    action: prepare
  before_script:
    - export TILLER_NAMESPACE=$KUBE_NAMESPACE
    - export HELM_HOST="localhost:44134"
    - nohup tiller -listen "${HELM_HOST}" >tiller.log 2>&1 &
    - helm2 init --client-only
  script:
    - helm3 2to3 cleanup --skip-confirmation --release-storage configmaps --tiller-out-cluster --tiller-ns "$TILLER_NAMESPACE"

.review:
  environment:
    name: review/$CI_COMMIT_REF_NAME
  rules:
    - if: '$MIGRATE_HELM_2TO3 != "true"'
      when: never
    - if: '$CI_KUBERNETES_ACTIVE == null || $CI_KUBERNETES_ACTIVE == ""'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$REVIEW_DISABLED'
      when: never
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'
      when: manual

review:helm-2to3:migrate:
  extends: [.review, .helm-2to3-migrate]

review:helm-2to3:cleanup:
  extends: [.review, .helm-2to3-cleanup]

.staging:
  environment:
    name: staging
  rules:
    - if: '$MIGRATE_HELM_2TO3 != "true"'
      when: never
    - if: '$CI_KUBERNETES_ACTIVE == null || $CI_KUBERNETES_ACTIVE == ""'
      when: never
    - if: '$CI_COMMIT_BRANCH != "master"'
      when: never
    - if: '$STAGING_ENABLED'
      when: manual

staging:helm-2to3:migrate:
  extends: [.staging, .helm-2to3-migrate]

staging:helm-2to3:cleanup:
  extends: [.staging, .helm-2to3-cleanup]

.production:
  environment:
    name: production
  rules:
    - if: '$MIGRATE_HELM_2TO3 != "true"'
      when: never
    - if: '$CI_KUBERNETES_ACTIVE == null || $CI_KUBERNETES_ACTIVE == ""'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual

production:helm-2to3:migrate:
  extends: [.production, .helm-2to3-migrate]

production:helm-2to3:cleanup:
  extends: [.production, .helm-2to3-cleanup]
